{"ast":null,"code":"var _jsxFileName = \"/Users/yvetteagyei/Documents/GitHub/rampChallenge/src/capturingFlagComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CapturingFlagComponent = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://wgg522pwivhvi5gqsn675gth3q0otdja.lambda-url.us-east-1.on.aws/616e79\");\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const result = await response.text();\n        console.log(result);\n        setData(result);\n      } catch (error) {\n        console.log(error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array means this runs once on mount\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.split(\"\").map((char, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: char\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(CapturingFlagComponent, \"RiL7vLwmC7ZWXKL/bXt2EIBjBYk=\");\n_c = CapturingFlagComponent;\nexport default CapturingFlagComponent;\nvar _c;\n$RefreshReg$(_c, \"CapturingFlagComponent\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CapturingFlagComponent","_s","data","setData","loading","setLoading","error","setError","fetchData","response","fetch","ok","Error","result","text","console","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","split","map","char","index","_c","$RefreshReg$"],"sources":["/Users/yvetteagyei/Documents/GitHub/rampChallenge/src/capturingFlagComponent.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst CapturingFlagComponent = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          \"https://wgg522pwivhvi5gqsn675gth3q0otdja.lambda-url.us-east-1.on.aws/616e79\"\n        );\n\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const result = await response.text();\n        console.log(result);\n        setData(result);\n      } catch (error) {\n        console.log(error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array means this runs once on mount\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div>\n      <ul>\n        {data.split(\"\").map((char, index) => (\n          <li key={index}>{char}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CapturingFlagComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,6EACF,CAAC;QAED,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACpCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;QACnBV,OAAO,CAACU,MAAM,CAAC;MACjB,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdS,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;QAClBC,QAAQ,CAACD,KAAK,CAACW,OAAO,CAAC;MACzB,CAAC,SAAS;QACRZ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAmB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIhB,KAAK,EAAE,oBAAOP,OAAA;IAAAmB,QAAA,GAAK,SAAO,EAACZ,KAAK;EAAA;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE3C,oBACEvB,OAAA;IAAAmB,QAAA,eACEnB,OAAA;MAAAmB,QAAA,EACGhB,IAAI,CAACqB,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC9B3B,OAAA;QAAAmB,QAAA,EAAiBO;MAAI,GAAZC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACrB,EAAA,CAzCID,sBAAsB;AAAA2B,EAAA,GAAtB3B,sBAAsB;AA2C5B,eAAeA,sBAAsB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}